"""
Вася решил накопить денег на два одинаковых велосипеда — себе и сестре.
У Васи есть копилка,
в которую каждый день он может добавлять деньги
(если, конечно, у него есть такая финансовая возможность).
В процессе накопления Вася не вынимает деньги из копилки.

У вас есть информация о росте Васиных накоплений
— сколько у Васи в копилке было денег в каждый из дней.

Ваша задача — по заданной стоимости велосипеда определить

первый день, в которой Вася смог бы купить один велосипед,
и первый день, в который Вася смог бы купить два велосипеда.
Подсказка: решение должно работать за O(log n).

Формат ввода
В первой строке дано число дней n,
по которым велись наблюдения за Васиными накоплениями. 1 ≤ n ≤ 106.

В следующей строке записаны n целых неотрицательных чисел.
Числа идут в порядке неубывания. Каждое из чисел не превосходит 106.

В третьей строке записано целое положительное число s — стоимость велосипеда.
Это число не превосходит 106.

Формат вывода
Нужно вывести два числа — номера дней по условию задачи.

Если необходимой суммы в копилке не нашлось,
нужно вернуть -1 вместо номера дня.

"""


def binarySearch(money, bike_price, left, right):
    # промежуток пуст
    if right <= left and left != 0:
        return -1
    # промежуток не пуст
    mid = (left + right) // 2
    # центральный элемент — искомый
    if (money[mid] >= bike_price
        and (money[mid - 1] < bike_price
             or mid == 0)):
        return mid + 1
    # искомый элемент меньше центрального
    # значит следует искать в левой половине
    elif bike_price <= money[mid]:
        return binarySearch(money, bike_price, left, mid)
    # иначе следует искать в правой половине
    else:
        return binarySearch(money, bike_price, mid + 1, right)


def read_input():
    days_amount = int(input())
    money = [int(num) for num in input().split()]
    bike_price = int(input())
    return money, bike_price


def main(money, bike_price):
    day1_bike = binarySearch(money, bike_price, 0, len(money))
    day2_bikes = binarySearch(money, bike_price * 2, 0, len(money))
    print(day1_bike, day2_bikes)


if __name__ == '__main__':
    money, bike_price = read_input()
    main(money, bike_price)
